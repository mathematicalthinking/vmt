@value colors: '../../../colors.css';
@value blue from colors;

.AssignmentMatrixContainer {
  width: 100%;
  max-height: 100%;
}

.Container {
  display: flex;
  flex-flow: column;
  width: 100%;
  align-items: center;
  max-height: 100%;
  padding: 20px;
  z-index: 0;
}

.Title {
  font-size: 26px;
  margin-bottom: 15px;
}

.Radios {
  display: flex;
  justify-content: space-around;
  width: 100%;
  margin-top: 30px;
}

.SubContainer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
  width: 100%;
}

.ParticipantList {
  margin: 20px 0 10px 0;
  display: flex;
  flex-flow: column;
  align-items: flex-start;
  overflow-y: scroll;
  background: #f8f8f8;
  border: 1px solid #ddd;
  padding: 5px;
  width: 100%;
  min-height: 200px;
}

.Participant {
  color: black;
  padding: 7px;
  width: 100%;
  text-align: left;
  border-bottom: 1px solid #ddd;
}

.Participant:hover {
  color: #999;
}

.Buttons {
  display: flex;
  flex-grow: 0;
  justify-content: center;
}
.Button {
  display: flex;
  justify-content: center;
}

.Selected {
  color: blue;
}

.SelectionMade,
.SelectionMade:hover {
  background-color: #bbb;
}

.EvenParticipant {
  background-color: #ddd;
}

.Table {
  vertical-align: middle;
  border-right: 10px solid #ddd;
}

.Error {
  color: red;
  height: 20px;
  /* margin: auto; */
  width: 300px;
}

.RoomsList {
  margin: 0px 2px;
  padding: 10px;
  /* center the room number in the table in AssignmentMatrix */
  text-align: center;
}

.LockedColumn {
  /* Background color */
  background-color: #ddd;
  /* Stick to the left */
  left: 0;
  position: sticky;

  /* Displayed on top of other rows when scrolling */
  z-index: 87;
  /* reduce column size w/Participants' names */
  width: 150px;
  cursor: default;
}

.Caption {
  padding: 0.5em;
  font-size: 1.5rem;
  display: flex;
  justify-content: center;
}

.LockedTop {
  background-color: #ddd;
  position: sticky;
  top: 0;
  z-index: 100;
  cursor: default;
}

.LockedBottom {
  background-color: #ddd;
  position: sticky;
  bottom: 0;
  border-top: 2px solid black;
  z-index: 89;
}

.LockedBottom:hover {
  background-color: #ddd !important;
  color: black;
}

.AssignmentMatrix {
  max-height: 60vh;
  min-height: 185px;
  overflow: auto;
  width: 100%;
}

.AssignmentMatrix::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 7px;
}
.AssignmentMatrix::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: blue;
  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);
}

.AssignmentMatrix::-webkit-scrollbar:horizontal {
  -webkit-appearance: none;
  height: 7px;
}
.AssignmentMatrix::-webkit-scrollbar-thumb:horizontal {
  border-radius: 4px;
  background-color: blue;
  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);
}

.CellAction {
  text-align: center;
  padding: 0.5rem 0.125rem; /* 0.125 rem = 2px */
  /* Steve wants the horizontal padding to be 
    cut down to a minimum. The problem is AssignmentMatrix has
    width:100%, which enlarges the cell padding dynamically
    more than 2px
  */
}

.RevertName {
  height: 1rem;
  padding: 1rem 0 0 1rem;
  margin-left: -2rem;
}

.RevertName:hover {
  cursor: pointer;
}

.TopSection {
  width: 100%;
  display: flex;
  justify-content: flex-end;
}

.BottomButtons {
  padding-bottom: 5px;
  border-bottom: 1px solid #ddd;
  width: 100%;
}

.minus {
  padding: 5px;
}

.plus {
  padding: 5px;
}

.minus:hover,
.plus:hover {
  color: #999;
  cursor: pointer;
}

.AddParticipants {
  height: 350px;
  width: 100%;
  /* min-width: 450px; */
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.NewParticipants {
  height: 350px;
  width: 100%;
  /* min-width: 450px; */
  overflow-y: auto;
}

.ParticipantsContainer {
  display: flex;
  flex-flow: row;
  justify-content: space-around;
  flex-wrap: wrap;
  align-items: center;
  height: 100%;
  width: 90vw;
  padding: 15px 20px 0;
  z-index: 0;
}

.InfoBoxContainer {
  width: 100%;
  display: flex;
}

.InfoBox {
  width: 50%;
  padding: 0 5px;
}

.RoomNameInput {
  display: flex;
}

.AliasInstructions {
  margin: auto 0;
}

.AliasTooltipContent {
  display: none;
  position: absolute;
  /* margin-top: 2rem; */
  margin-left: -2rem;
  padding: 10px;
  /* left: auto;
  right: 65px; */
  z-index: 1000;
  box-shadow: lightShadow;
  background: #2d91f2;
  color: white;
  border: 2px solid #ddd;
  min-width: 200px;
  /* width: max-content; */
  max-width: 85%;
  font-family: 'Lato', 'sans-serif';
  font-weight: 400;
  transition: 0.2s;
}

.AliasInstructions:hover .AliasTooltipContent {
  display: flex;
  animation: showDropdown 0.2s;
}

.ModalButton {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.SortContainer {
  position: relative;
  z-index: 299;
  width: 100%;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

.SortText {
  display: flex;
  align-items: center;
}

.SortSelection {
  width: 250px;
  margin-left: 1rem;
}

/* Tooltip text */
/* https://www.w3schools.com/css/css_tooltip.asp */
.tooltip .tooltiptext {
  visibility: hidden;
  width: 100%;
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;

  /* Position the tooltip text */
  position: absolute;
  z-index: 900;
  top: 5px;
  left: 105%;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
}

.Search {
  display: flex;
  align-items: center;
  font-size: inherit;
  width: 100%;
}

.Input {
  border: 1px solid #ddd;
  border-radius: 3px;
  width: 100%;
  padding: 10px;
  padding-left: 35px;
  transition: 0.2s;
  background-color: white;
  font-size: 16px;
  letter-spacing: 0.08em;
  color: #666;
  caret-color: lightBlue;
  font-family: inherit;
  position: relative;
  box-shadow: lightestShadow;
}

.Input:focus {
  border: none;
  border: 1px solid blue;
  outline-width: 0;
}

.Icon {
  font-size: inherit;
  margin-left: 8px;
  position: absolute;
  color: darkGray;
}
